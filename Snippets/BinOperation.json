{
	"Binary Operations": {
		"prefix": "BinOperations",
		"body": [
		  "ll BinPow(ll a, ll b) {",
		  "    ll res = 1;",
		  "    while (b > 0) {",
		  "        if (b & 1)",
		  "            res = res * a;",
		  "        a = a * a;",
		  "        b >>= 1;",
		  "    }",
		  "    return res;",
		  "}",
		  "",
		  "ll BinLog(ll x) {",
		  "    ll l = 0;",
		  "    ll r = 100;",
		  "    while(r - l >= 0){",
		  "        ll mid = l + (r - l) / 2;",
		  "        if(BinPow(2,mid) <= x){",
		  "            l = mid + 1;",
		  "        }",
		  "        else r = mid - 1;",
		  "    }",
		  "    return l - 1;",
		  "}",
		  "",
		  "ll BinSqrt(ll x){",
		  "    ll l = 0;",
		  "    ll r = 1e9;",
		  "    while (r - l >= 0) {",
		  "        ll mid = l + (r - l) / 2;",
		  "        if(mid * mid <= x){",
		  "            l = mid + 1;",
		  "        }",
		  "        else r = mid - 1;",
		  "    }",
		  "    return l - 1;",
		  "}"
		],
		"description": "Binary Operations"
	  }
}