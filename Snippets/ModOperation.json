{
	"Operations With Modulo": {
		"prefix": "Modulo",
		"body": [
		  "ll BinPow(ll a, ll b) {",
		  "    a %= MOD;",
		  "    ll res = 1;",
		  "    while (b > 0) {",
		  "        if (b & 1)",
		  "            res = (res * a) % MOD;",
		  "        a = (a * a) % MOD;",
		  "        b >>= 1;",
		  "    }",
		  "    return res;",
		  "}",
		  "",
		  "ll inverse(ll a){",
		  "    return BinPow(a, MOD - 2) % MOD;",
		  "}",
		  "",
		  "ll divide(ll a, ll b){",
		  "    return (a * inverse(b)) % MOD;",
		  "}",
		  "",
		  "ll sub(ll a, ll b){",
		  "    return ( (a - b) % MOD + MOD ) % MOD;",
		  "}",
		  "",
		  "ll mul(ll a, ll b){",
		  "    return ((a % MOD) * (b % MOD)) % MOD;",
		  "}",
		  "",
		  "ll add(ll a, ll b){",
		  "    return ((a % MOD) + (b % MOD)) % MOD;",
		  "}"
		],
		"description": "Operations With Modulo"
	  }
}